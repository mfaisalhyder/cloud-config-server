server:
  port: 8885
  servlet:
    context-path: /book-service

profile:
  name: Dev

book-service:
  auth:
    userName: user
    password: Ym9vay1zZXJ2aWNl
    roles: USER,ADMIN

cache-service:
  apiKey: dXNlcjpZMkZqYUdVdGMyVnlkbWxqWlE9PQ==
  url: http://127.0.0.1:8882/cache-service/cache
  ttl: 10

http:
  time:
    out: 60000

spring:
  datasource:
    driverClassName: org.h2.Driver
    name: book-service
    password:
    platform: h2
    url: jdbc:h2:mem:book-service;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
  h2:
    console:
      enabled: true
      path: /console
      settings:
        trace: false
        web-allow-others: true
  jpa:
    defer-datasource-initialization: true
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        format_sql: false
        hbm2ddl:
          import_files: data.sql
        show_sql: true
        use_sql_comments: false

logging:
  file:
    path: ${spring.application.name}/logs/
    name: ${logging.file.path}/${spring.application.name}.log
    max-history: 30
    max-size: 4MB
  level:
    faisal:
      cloud:
        app:
          bookservice: INFO
  pattern:
    console: '%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %highlight(%-5p) %clr(${PID}){faint} %clr(---){faint} %clr([%8.15t]){cyan} %boldYellow(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n'
    file: '%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n'

management:
  endpoints:
    web:
      exposure:
        include: refresh